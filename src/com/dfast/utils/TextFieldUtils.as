package com.dfast.utils {	import flash.text.TextField;	import flash.text.TextFormat;		/**	 * Contains static utility methods for manipulating TextFields.	 * 	 * @author 	Derrick Williams	 */  	public class TextFieldUtils 	{		/**		 * Changes the text format of all instances of the search string within the		 * given text field. 		 * 		 * @param 	textField 	The text field to edit.		 * @param 	search 		The string that the text format will be applied to.		 * @param	textFormat	The text format to apply to the search instances.		 */		public static function searchAndSetTextFormat( textField:TextField, search:String, textFormat:TextFormat ) : Boolean		{			var numFound		: int		= 0;				// Number of search instances isFound			var isFound 		: Boolean	= false;			// Flags if an instance was isFound			var foundIndexes	: Array 	= [];				// Stores the indexes for the instances of the search string			var searchLength	: int		= search.length;	// Length of the search string			var lastFoundIndex	: int		= 0;				// The last index of the search instance 						// if the search string instance exists, store its index, and repeat;			// otherwise, stop looking			do {				var tmpIndex = textField.text.indexOf( search, lastFoundIndex );								if( tmpIndex > -1 ){					foundIndexes[ numFound ] = tmpIndex;					lastFoundIndex = foundIndexes[ numFound ] + searchLength;					numFound++;					isFound = true;				} else {					isFound = false;				}							} while( isFound );						// if the search instance was found, apply the text format			if( numFound > 0 ){				for( var i in foundIndexes ) {					lastFoundIndex = foundIndexes[i] + searchLength;					textField.setTextFormat( textFormat, foundIndexes[i], lastFoundIndex );				}								return true;			} 							return false;					}	}}